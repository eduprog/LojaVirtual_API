// <auto-generated />
using System;
using LojaVirtual.Infra.Repositories.Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LojaVirtual.Infra.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200421224626_CreateTableProductDois")]
    partial class CreateTableProductDois
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LojaVirtual.Domain.Entities.Banner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdUserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<int>("Local")
                        .HasColumnType("int");

                    b.Property<int>("Pos")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(400)");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreate");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<Guid?>("IdUserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreate");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdUserCreate");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdUserCreate");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.ProductSize", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdUserCreate");

                    b.ToTable("ProductSizes");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.Banner", b =>
                {
                    b.HasOne("LojaVirtual.Domain.Entities.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("IdUserCreate");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.Category", b =>
                {
                    b.HasOne("LojaVirtual.Domain.Entities.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("IdUserCreate");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.Product", b =>
                {
                    b.HasOne("LojaVirtual.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory");

                    b.HasOne("LojaVirtual.Domain.Entities.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("IdUserCreate");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("LojaVirtual.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("IdProduct");

                    b.HasOne("LojaVirtual.Domain.Entities.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("IdUserCreate");
                });

            modelBuilder.Entity("LojaVirtual.Domain.Entities.ProductSize", b =>
                {
                    b.HasOne("LojaVirtual.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("IdProduct");

                    b.HasOne("LojaVirtual.Domain.Entities.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("IdUserCreate");
                });
#pragma warning restore 612, 618
        }
    }
}
